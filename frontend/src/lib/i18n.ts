import React, { createContext, useContext, useState, useEffect, ReactNode } from "react";

const translations = {
  en: {
    signIn: "Sign In",
    email: "Email",
    password: "Password",
    logout: "Logout",
    profileSettings: "Profile / Settings",
    changePassword: "Change Password",
    preferences: "Preferences",
    activityLog: "Activity Log",
    theme: "Theme",
    language: "Language",
    profile: "Profile",
    saveChanges: "Save Changes",
    saveChangesComingSoon: "Save Changes (coming soon)",
    name: "Name",
    close: "Close",
    currentPassword: "Current Password",
    newPassword: "New Password",
    confirmNewPassword: "Confirm New Password",
    dashboard: "Dashboard",
    quickDeposit: "Quick Deposit",
    addFunds: "Add funds to your wallet instantly",
    amount: "Amount",
    currency: "Currency",
    sendMoney: "Send Money",
    transferFunds: "Transfer funds to another wallet user",
    recipientEmail: "Recipient Email",
    rateAlert: "Rate Alert",
    alertFor: "Alert for",
    at: "at",
    exchangeRates: "Exchange Rates",
    currentRates: "Current rates per 1",
    baseCurrency: "Base Currency",
    historicalExchangeRates: "Historical Exchange Rates",
    trackCurrencyPerformance: "Track currency performance over time",
    usdIls: "USD/ILS",
    eurIls: "EUR/ILS",
    gbpIls: "GBP/ILS",
    customRange: "Custom Range",
    loadingHistoricalRates: "Loading...",
    noDataAvailable: "No data available for this range.",
    recentTransactions: "Recent Transactions",
    yourLatestWalletActivity: "Your latest wallet activity",
    transactions: "transactions",
    date: "Date",
    type: "Type",
    equivalentIls: "Equivalent (ILS)",
    deposit: "Deposit",
    transfer: "Transfer",
    quickActions: "Quick Actions",
    activityLogComingSoon: "Activity log coming soon...",
    enterCurrentPasswordAndNewPassword: "Enter your current password and a new password.",
    english: "English",
    hebrew: "עברית (Hebrew)",
    // Notifications and errors
    passwordChanged: "Password changed successfully",
    passwordsDoNotMatch: "Passwords do not match",
    passwordRequirements: "Password must be at least 6 characters and include a letter and a digit",
    changeFailed: "Change failed",
    networkError: "Network error",
    failedToLoadBalances: "Failed to load balances",
    failedToLoadExchangeRates: "Failed to load exchange rates",
    failedToLoadTransactions: "Failed to load transactions",
    invalidAmount: "Invalid Amount",
    pleaseEnterValidDeposit: "Please enter a valid deposit amount.",
    depositSuccessful: "Deposit Successful",
    depositFailed: "Deposit Failed",
    missingInformation: "Missing Information",
    pleaseFillAllTransferFields: "Please fill in all transfer fields.",
    transferSuccessful: "Transfer Successful",
    transferFailed: "Transfer Failed",
    ratesUpdated: "Rates Updated",
    // ...add more as needed
  },
  he: {
    signIn: "התחברות",
    email: "אימייל",
    password: "סיסמה",
    logout: "התנתק",
    profileSettings: "פרופיל / הגדרות",
    changePassword: "שנה סיסמה",
    preferences: "העדפות",
    activityLog: "יומן פעילות",
    theme: "ערכת נושא",
    language: "שפה",
    profile: "פרופיל",
    saveChanges: "שמור שינויים",
    saveChangesComingSoon: "שמור שינויים (בקרוב)",
    name: "שם",
    close: "סגור",
    currentPassword: "סיסמה נוכחית",
    newPassword: "סיסמה חדשה",
    confirmNewPassword: "אימות סיסמה חדשה",
    dashboard: "לוח בקרה",
    quickDeposit: "הפקדה מהירה",
    addFunds: "הוסף כספים לארנק שלך מיידית",
    amount: "סכום",
    currency: "מטבע",
    sendMoney: "שלח כסף",
    transferFunds: "העבר כספים למשתמש אחר בארנק",
    recipientEmail: "אימייל נמען",
    rateAlert: "התראת שער",
    alertFor: "התראה עבור",
    at: "ב-",
    exchangeRates: "שערי חליפין",
    currentRates: "שערים נוכחיים ל-1",
    baseCurrency: "מטבע בסיס",
    historicalExchangeRates: "שערי חליפין היסטוריים",
    trackCurrencyPerformance: "עקוב אחרי ביצועי מטבע לאורך זמן",
    usdIls: "דולר/שקל",
    eurIls: "אירו/שקל",
    gbpIls: "פאונד/שקל",
    customRange: "טווח מותאם",
    loadingHistoricalRates: "טוען...",
    noDataAvailable: "אין נתונים לטווח זה.",
    recentTransactions: "עסקאות אחרונות",
    yourLatestWalletActivity: "הפעילות האחרונה שלך בארנק",
    transactions: "עסקאות",
    date: "תאריך",
    type: "סוג",
    equivalentIls: "שווה ערך (ש\"ח)",
    deposit: "הפקדה",
    transfer: "העברה",
    quickActions: "פעולות מהירות",
    activityLogComingSoon: "יומן פעילות - בקרוב...",
    enterCurrentPasswordAndNewPassword: "הזן את הסיסמה הנוכחית וסיסמה חדשה.",
    english: "English",
    hebrew: "עברית (Hebrew)",
    // Notifications and errors
    passwordChanged: "הסיסמה שונתה בהצלחה",
    passwordsDoNotMatch: "הסיסמאות אינן תואמות",
    passwordRequirements: "הסיסמה חייבת להיות לפחות 6 תווים ולכלול אות וספרה",
    changeFailed: "העדכון נכשל",
    networkError: "שגיאת רשת",
    failedToLoadBalances: "שגיאה בטעינת יתרות",
    failedToLoadExchangeRates: "שגיאה בטעינת שערי חליפין",
    failedToLoadTransactions: "שגיאה בטעינת עסקאות",
    invalidAmount: "סכום לא תקין",
    pleaseEnterValidDeposit: "אנא הזן סכום הפקדה תקין.",
    depositSuccessful: "הפקדה בוצעה בהצלחה",
    depositFailed: "הפקדה נכשלה",
    missingInformation: "מידע חסר",
    pleaseFillAllTransferFields: "אנא מלא את כל שדות ההעברה.",
    transferSuccessful: "העברה בוצעה בהצלחה",
    transferFailed: "העברה נכשלה",
    ratesUpdated: "שערים עודכנו",
    // ...add more as needed
  }
};

type I18nContextType = {
  lang: string;
  setLang: (l: string) => void;
  t: (k: string) => string;
};

const I18nContext = createContext<I18nContextType>({
  lang: "en",
  setLang: () => {},
  t: (k) => k
});

export const I18nProvider = ({ children }: { children: ReactNode }) => {
  const [lang, setLang] = useState(() => localStorage.getItem("lang") || "en");
  useEffect(() => {
    localStorage.setItem("lang", lang);
  }, [lang]);
  const t = (k: string) => translations[lang as "en" | "he"][k] || translations.en[k] || k;
  return React.createElement(I18nContext.Provider, { value: { lang, setLang, t } }, children);
};

export const useTranslation = () => useContext(I18nContext); 